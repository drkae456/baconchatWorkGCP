name: GCP Deployment

on:
  push:
    branches:
      - main
 
jobs:
  deploy:
    runs-on: ubuntu-latest

    env: 
      DEPLOYMENT_NAME: ${{ secrets.DEPLOYMENT_NAME }}
      IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      BILLING_ACCOUNT_ID: ${{ secrets.BILLING_ACCOUNT_ID }}
      REGION: ${{ secrets.GCP_REGION }}
      VPC_NAME: ${{ secrets.VPC_NAME }}
      SUBNET_NAME: ${{ secrets.SUBNET_NAME }}
      CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
      NODE_POOL_NAME: ${{ secrets.NODE_POOL_NAME }}
      SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SA_KEY }}
      GCP_BUCKET: ${{ secrets.GCP_BUCKET }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1.1.1
        with:
          service_account_key: ${{ env.SERVICE_ACCOUNT_KEY }}
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker to use gcloud as a credential helper
        run: echo '${{ secrets.GCP_SA_KEY }}' | docker login -u _json_key --password-stdin gcr.io
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.7'

      - name: Initialize Terraform
        run: terraform init

      - name: Validate Terraform configuration
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        if: success() && github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan

      - name: Build Docker Image
        run: docker build -t ${{ env.IMAGE_NAME }} -f docker/WebApp/Dockerfile .

      - name: Push Docker Image to Google Container Registry
        run: docker push ${{ env.IMAGE_NAME }}

      - name: Set up kubectl
        uses: google-github-actions/setup-gcloud@v1.1.1
        with:
          service_account_key: ${{ env.SERVICE_ACCOUNT_KEY }}
          project_id: ${{ env.PROJECT_ID }}
          install_components: 'gke-gcloud-auth-plugin'

      - name: Configure kubectl
        run: |
          gcloud components install gke-gcloud-auth-plugin
          gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --region ${{ env.REGION }} --project ${{ env.PROJECT_ID }}

      - name: Deploy to Kubernetes
        run: kubectl apply -f k8s/